{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n  }\n\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar _ = require(\"lodash\");\n\nexports.defaultOptions = {\n  mobileLimit: 468,\n  tabletLimit: 768,\n  shouldListenOnResize: true\n};\nvar ScreenType;\n\n(function (ScreenType) {\n  ScreenType[ScreenType[\"MOBILE\"] = 0] = \"MOBILE\";\n  ScreenType[ScreenType[\"TABLET\"] = 1] = \"TABLET\";\n  ScreenType[ScreenType[\"DESKTOP\"] = 2] = \"DESKTOP\";\n})(ScreenType = exports.ScreenType || (exports.ScreenType = {}));\n\nfunction withGetScreen(WrappedComp, options) {\n  if (options === void 0) {\n    options = exports.defaultOptions;\n  }\n\n  return function (_super) {\n    __extends(class_1, _super);\n\n    function class_1() {\n      var _this = _super.call(this) || this;\n\n      _this.onResize = function () {\n        var newSize = _this.getSize(window.innerWidth);\n\n        if (newSize !== _this.state.currentSize) {\n          _this.setState({\n            currentSize: newSize\n          });\n        }\n      };\n\n      _this.isMobile = function () {\n        return _this.state.currentSize === ScreenType.MOBILE;\n      };\n\n      _this.isTablet = function () {\n        return _this.state.currentSize === ScreenType.TABLET;\n      };\n\n      _this.isDesktop = function () {\n        return _this.state.currentSize === ScreenType.DESKTOP;\n      };\n\n      _this.onResize = _.throttle(_this.onResize, 100);\n      _this.state = {\n        currentSize: _this.getSize(window.innerWidth)\n      };\n      return _this;\n    }\n\n    class_1.prototype.componentDidMount = function () {\n      if (options.shouldListenOnResize) {\n        window.addEventListener('resize', this.onResize);\n      }\n    };\n\n    class_1.prototype.componentWillUnmount = function () {\n      this.onResize.cancel();\n      window.removeEventListener('resize', this.onResize);\n    };\n\n    class_1.prototype.getSize = function (size) {\n      if (size <= options.mobileLimit) {\n        return ScreenType.MOBILE;\n      } else if (size >= options.tabletLimit) {\n        return ScreenType.DESKTOP;\n      } else {\n        return ScreenType.TABLET;\n      }\n    };\n\n    class_1.prototype.render = function () {\n      var detectMethods = {\n        isMobile: this.isMobile,\n        isTablet: this.isTablet,\n        isDesktop: this.isDesktop\n      };\n      return React.createElement(WrappedComp, __assign({}, detectMethods, this.props));\n    };\n\n    return class_1;\n  }(React.Component);\n}\n\nexports.withGetScreen = withGetScreen;","map":null,"metadata":{},"sourceType":"script"}