{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\WEB\\\\A7AQUIZ\\\\public\\\\a7aquiz\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport * as firebase from 'firebase';\nlet temp = [];\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: []\n    };\n  }\n\n  componentDidMount() {\n    const rootRef = firebase.database().ref();\n    const speedRef = rootRef.child('quiz1');\n    speedRef.on('value', snap => {\n      let questions = snap.val();\n      let newState = [];\n\n      for (let x in questions) {\n        newState.push({\n          id: x,\n          op1: questions[x].op1,\n          op2: questions[x].op2,\n          op3: questions[x].op3,\n          op4: questions[x].op4,\n          q: questions[x].question\n        });\n      }\n\n      this.setState({\n        questions: newState\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.state.questions.map(q => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, q.q));\n    }));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["E:\\Projects\\WEB\\A7AQUIZ\\public\\a7aquiz\\src\\App.js"],"names":["React","Component","firebase","temp","App","constructor","props","state","questions","componentDidMount","rootRef","database","ref","speedRef","child","on","snap","val","newState","x","push","id","op1","op2","op3","op4","q","question","setState","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAO,sDAAP;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AAEA,IAAIC,IAAI,GAAG,EAAX;AAEA,OAAO,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAGjCI,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,SAAS,EAAG;AADH,KAAX;AAID;;AAEDC,EAAAA,iBAAiB,GAAE;AAEjB,UAAMC,OAAO,GAAGR,QAAQ,CAACS,QAAT,GAAoBC,GAApB,EAAhB;AACA,UAAMC,QAAQ,GAAGH,OAAO,CAACI,KAAR,CAAc,OAAd,CAAjB;AAEAD,IAAAA,QAAQ,CAACE,EAAT,CAAY,OAAZ,EAAqBC,IAAI,IAAE;AACzB,UAAIR,SAAS,GAAIQ,IAAI,CAACC,GAAL,EAAjB;AACA,UAAIC,QAAQ,GAAG,EAAf;;AACA,WAAI,IAAIC,CAAR,IAAaX,SAAb,EAAuB;AACrBU,QAAAA,QAAQ,CAACE,IAAT,CAAc;AACZC,UAAAA,EAAE,EAAGF,CADO;AAEZG,UAAAA,GAAG,EAAGd,SAAS,CAACW,CAAD,CAAT,CAAaG,GAFP;AAGZC,UAAAA,GAAG,EAAGf,SAAS,CAACW,CAAD,CAAT,CAAaI,GAHP;AAIZC,UAAAA,GAAG,EAAGhB,SAAS,CAACW,CAAD,CAAT,CAAaK,GAJP;AAKZC,UAAAA,GAAG,EAAGjB,SAAS,CAACW,CAAD,CAAT,CAAaM,GALP;AAMZC,UAAAA,CAAC,EAAElB,SAAS,CAACW,CAAD,CAAT,CAAaQ;AANJ,SAAd;AASD;;AAEF,WAAKC,QAAL,CAAc;AACZpB,QAAAA,SAAS,EAAGU;AADA,OAAd;AAIA,KAnBD;AAqBD;;AAEDW,EAAAA,MAAM,GAAG;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKtB,KAAL,CAAWC,SAAX,CAAqBsB,GAArB,CAAyBJ,CAAC,IAAE;AAC3B,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,CAAC,CAACA,CAAP,CADA,CADF;AAKD,KANA,CADH,CADF;AAWD;;AApDgC;AAuDnC,eAAetB,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport './App.css'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport * as firebase from 'firebase';\n\nlet temp = [];\n\nexport class App extends Component {\n\n\n  constructor(props){\n    super(props);\n    this.state={\n      questions : [],\n \n    }\n  }\n \n  componentDidMount(){\n  \n    const rootRef = firebase.database().ref();\n    const speedRef = rootRef.child('quiz1');\n   \n    speedRef.on('value', snap=>{\n      let questions  = snap.val();\n      let newState = [];\n      for(let x in questions){\n        newState.push({\n          id : x,\n          op1 : questions[x].op1,\n          op2 : questions[x].op2,\n          op3 : questions[x].op3,\n          op4 : questions[x].op4,\n          q: questions[x].question\n\n        })\n      }\n     \n     this.setState({\n       questions : newState\n     }) \n     \n    });\n\n  }\n\n  render() {\n    \n    return (\n      <div className=\"App\">\n        {this.state.questions.map(q=>{\n          return(\n            <div>\n            <h1>{q.q}</h1>\n            </div>\n          );\n        })}\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}